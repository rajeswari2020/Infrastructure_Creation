properties([
    parameters([
        string(
            defaultValue: 'dev',
            name: 'Environment' 
        ),
        choice(
            choices: ['plan','apply','destroy'],
            name: 'Terraform_Action'

        )
    ])
])

pipeline{
    agent any
    stages{
        stage('Preparing'){
            steps{
                sh 'echo preparing'
            }
        }
        stage('Git Checkout'){
           steps{
            git branch: 'main' , url: 'https://github.com/rajeswari2020/Infrastructure_Creation.git'
           }
        }
        stage('Init'){
           steps{
            withAWS(credentials: 'aws-creds', region: 'ap-south-1'){
            sh 'terraform init'
            }
           }
        }
        stage('Validate'){
              steps{
                withAWS(credentials: 'aws-creds',region: 'ap-south-1'){
                sh 'terraform validate'
                }
              }
        }
        stage('Action'){
             steps{
                withAWS(credentails: 'aws-creds',region: 'ap-south-1'){
                script{
                    if (params.Terraform_Action == 'plan'){
                       //sh "terraform plan -var-file=${params.Environment}.tfvars"
                       sh "terraform plan -var-file=${params.Environment}.tfvars"
                    } else if(params.Terraform_Action == 'apply'){
                      // sh "terraform apply -var-file=${params.Environmant}.tfvars -auto-approve"
                       sh "terraform apply -var-file=${params.Environmant}.tfvars -auto-approve"
                    } else if(params.Terraform_Action == 'destroy'){
                       //sh "terraform destroy -var-file=${params.Environment}.tfvars -auto-approve"
                       sh "terraform destroy -var-file=${params.Environment}.tfvars -auto-approve"
                    }else{
                        error "Invalid value for Terraform action: ${params.Terraform_Action}"
                    }
                }
                }
             }
        }
    }
}